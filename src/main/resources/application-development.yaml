# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection

#datasource:
#
#  crm:
#    jdbcUrl: "jdbc:oracle:thin:@xxx"
#    username: ${db.usr}
#    password: ${db.pwd}
#    testWhileIdle: true
#    validationQuery: SELECT 1 from dual
#    testOnBorrow: true


server:
  port: 8080
  error:
    include-message: always

spring:
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
    username: root
    password: root
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
      hibernate.temp.use_jdbc_metadata_defaults: false

  kafka:
#    security:
#      protocol: "SSL"
    bootstrap-servers: "172.20.26.240:9092"
#    ssl:
#      trust-store-location: classpath:/client-certs/kafka.client.truststore.jks
#      trust-store-password: password
#      key-store-location:  classpath:/client-certs/kafka.client.keystore.jks
#      key-store-password: password
#    consumer:
#      group-id: demo-group-id
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

message:
  topic:
    name: test
#    name: baeldung
#long:
#  message:
#    topic:
#      name: longMessage
#greeting:
#  topic:
#    name: greeting
#filtered:
#  topic:
#    name: filtered
#partitioned:
#  topic:
#    name: partitioned
#multi:
#  type:
#    topic:
#      name: multitype

# monitoring - lag analysis
#monitor:
#  kafka:
#    bootstrap:
#      config: "172.20.26.240:9092"
#    consumer:
#      groupid: baeldungGrp
#        simulate: baeldungGrpSimulate
#  topic:
#    name: baeldung

# monitoring - simulation
#  producer:
#    simulate: true
#  consumer:
#    simulate: true
#
#test:
#  topic: testtopic1
